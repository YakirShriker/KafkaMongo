---
version: '2'
services:
  producer:
    build:
      context: ./Producer/ # Use an image built from the specified dockerfile in the current directory.
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    expose:
      - 5000
    restart: unless-stopped
    networks:
      - kafka_network
  consumer:
    build:
      context: ./Consumer/ # Use an image built from the specified dockerfile in the current directory.
      dockerfile: Dockerfile
    restart: unless-stopped
    networks:
      - kafka_network
  apiserver:
    build:
      context: ./Apiserver/ # Use an image built from the specified dockerfile in the current directory.
      dockerfile: Dockerfile
    ports:
      - "5100:5100"
    expose:
      - 5100
    restart: unless-stopped
    networks:
      - kafka_network
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - kafka_network
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 9092:9092
    networks:
      - kafka_network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  mongodb_container:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongorootuser
      MONGO_INITDB_ROOT_PASSWORD: yakir123
      MONGO_INITDB_DATABASE: ironsource_shop
    ports:
      - 27017:27017
    networks:
      - kafka_network
    volumes:
      - mongodb_data_container:/data/db

volumes:
  mongodb_data_container:
networks:
  kafka_network:
